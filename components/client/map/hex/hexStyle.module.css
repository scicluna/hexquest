.hexagon {
    width: calc((1.732/2) * var(--hex-size));
    height: var(--hex-size);
    background-color: #000000;
    clip-path: polygon(50% 0%, 100% 25%, 100% 75%, 50% 100%, 0% 75%, 0% 25%);
    margin: 1px;
    border: transparent;
}

.hexagon::before,
.hexagon::after {
    content: '';
    position: absolute;
    width: 0;
    border-left: calc(var(--hex-size) / 2) solid transparent;
    border-right: calc(var(--hex-size) / 2) solid transparent;
    z-index: 10;
}

.hexagon::before {
    top: calc(-1.732 * var(--hex-size) / 2);
    /* negative of (sqrt(3)/2 * width) */
    border-bottom: calc(1.732 * var(--hex-size) / 2) solid #eee;
}

.hexagon::after {
    bottom: calc(-1.732 * var(--hex-size) / 2);
    /* negative of (sqrt(3)/2 * width) */
    border-top: calc(1.732 * var(--hex-size) / 2) solid #eee;
}

.hexagon {
    transition: transform 0.5s;
    transform-style: preserve-3d;
    perspective: 1000px;
}

.flipped {
    animation: flipHex .2s ease-in;
}

.front,
.back {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    transition: transform .6s;
}

.new {
    animation: placeDown 0.2s ease-in-out;
}



/* hexPhantomStyle.module.css */
@keyframes placeDown {
    from {
        transform: scale(0.8);
        /* start from a scaled down state */
        opacity: 0.5;
        /* start slightly transparent */
    }

    to {
        transform: scale(1);
        /* scale to its normal size */
        opacity: 1;
        /* make it fully opaque */
    }
}

@keyframes flipHex {
    0% {
        transform: rotateX(0deg);
    }

    50% {
        transform: rotateX(180deg);
    }

    100% {
        transform: rotateX(360deg);
    }
}